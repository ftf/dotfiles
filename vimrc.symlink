"Forget compatibility with Vi. Who cares.
set nocompatible

" Set encoding
set encoding=utf-8

" searching
set hlsearch
set incsearch
set ignorecase
set smartcase

"Enable file types
filetype on
filetype plugin on
filetype indent on
syntax on
set t_Co=256

set ruler
set number

" if has('gui_running')
"   color inkpot
" endif
set diffopt+=algorithm:patience

"Enable spell checking
set spell
set spelllang=en_us,de_20
set spellfile=~/.vim/spell/spellfile.add
noremap <silent> ,s :set spell!<CR>
highlight clear SpellBad
highlight clear SpellRare
highlight clear SpellLocal
highlight clear SpellCap
highlight SpellBad   gui=undercurl cterm=underline ctermfg=red    guisp=red
highlight SpellRare  gui=undercurl cterm=underline ctermfg=red    guisp=orange
highlight SpellLocal gui=undercurl cterm=underline ctermfg=blue   guisp=blue
highlight SpellCap   gui=undercurl cterm=underline ctermfg=yellow guisp=Yellow

set showcmd
set laststatus=2

" psst
set visualbell
set noerrorbells

" auto save on file change
set autowrite

" indent settings
set smartindent
set autoindent

" tabstop thingys
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

" macvim style
"set guioptions=aAce
"set guifont=Monaco:h12


call plug#begin('~/.vim/plugged')
let g:plug_shallow  = 1
Plug 'itchyny/lightline.vim'
Plug 'bling/vim-bufferline'
Plug 'bronson/vim-trailing-whitespace'
Plug 'w0rp/ale'
Plug 'mattn/emmet-vim'
Plug 'tpope/vim-fugitive'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'pangloss/vim-javascript'
Plug 'pangloss/vim-javascript', { 'for': 'javascript' }
Plug 'gavocanov/vim-js-indent'
Plug 'michaeljsmith/vim-indent-object'
Plug 'wikitopian/hardmode'
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-commentary'
Plug 'flazz/vim-colorschemes'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
call plug#end()


" set stylesheet
color kellys

" set leader to something
let mapleader = "\<SPACE>"

" NERDTree
nmap <leader>n :NERDTreeToggle<CR>

" Windows navigation
noremap <silent> ,h :wincmd h<CR>
noremap <silent> ,j :wincmd j<CR>
noremap <silent> ,k :wincmd k<CR>
noremap <silent> ,l :wincmd l<CR>

" More useful command-line completion
set wildmenu
set wildmode=list:longest
set completeopt=menu,longest

" Bubble single lines
nmap <C-Up> ddkP
nmap <C-Down> ddp
" Bubble multiple lines
vmap <C-Up> xkP`[V`]
vmap <C-Down> xp`[V`]

" Backups
set backupdir=~/.dotfiles/vimtmp/
set directory=~/.dotfiles/vimtmp/
" enable backup
set backup

" show matching brackets
set showmatch
set matchtime=7

" easier hidden buffer usage
set hidden

" textmate like hidden symbols
set listchars=tab:▸\ ,eol:¬
nmap <leader>h :set list!<CR>
set list!

" ruby things
autocmd BufNewFile,BufRead *.erb    set filetype=html.eruby
autocmd BufNewFile,BufRead *.scss   set filetype=scss.css

" add json syntax highlighting
autocmd BufNewFile,BufRead *.json set ft=javascript

" backspace fix
set backspace=indent,eol,start

" Yank from the cursor to the end of the line, to be consistent with C and D.
nnoremap Y y$

" clearing highlighted search with leader q
nmap <leader>q :nohlsearch<CR>

" toggle linenumbers
nmap <leader>l :setlocal number!<CR>

" toggle paste
nmap <leader>p :set paste!<CR>

" toggle line wrapping
nmap <leader>w :setlocal wrap!<CR>:setlocal wrap?<CR>

" fzf
nmap <leader>b :Buffers<CR>
nmap <leader>o :Files<CR>
nmap <leader>H :History<CR>

" ALE
let g:ale_completion_enabled = 1


" hardmode
nnoremap <leader>k <Esc>:call ToggleHardMode()<CR>
" enable hardmode by default
"autocmd VimEnter,BufNewFile,BufReadPost * silent! call HardMode()

" highlight column 81
highlight ColorColumn ctermbg=DarkCyan
call matchadd('ColorColumn', '\%81v', 100)
